<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAABAAAAAgAAAAIAAAACAAAAAwAAAAMAAAADAAAAAwAAAAQAAAAEAAAABAAAAAMAAAADAAAAAwAA
        AAMAAAACAAAAAgAAAAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAEAAAADAAAABIAAAAZAAAAHwAAACUAAAAqAAAALgAAADEAAAAzAAAANAAAADQAAAA0AAAAMgAA
        ADEAAAAuAAAAKgAAACUAAAAfAAAAGAAAABEAAAAIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAkAAAAVAAAAIAAAAC0AAAA6AAAARAAAAFMAAAB4AAAAlgAAAKMAAACmAAAApgAA
        AKYAAACjAAAAlgAAAHgAAABTAAAARgAAADsAAAAwAAAAJAAAABQAAAAGAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABQAAAAwAAAASAAAAGgAAACkAAABdAAAAhUpIRbKUkIriurav9svG
        wfzU0Mv/y8fC/Ly4sPaXk4ziT0xJtQAAAIUAAABdAAAAKwAAABwAAAAUAAAACgAAAAMAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAXYyHgNq+ubH/h4J6/4eFg//X087/vbm0/97a1f/e2tX/3trV/97a1f/Rzcj/FxcW/9HN
        yP/e2tX/3trV/97a1f/e2tX/vbm0/9fTzv+HhYP/gn52/7q0q/+GgXraAAAAXQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAxUlBNoMXAuP+moJb/amhl/3RwbP+yrqn/29fS/97a1f/e2tX/3trV/9bS
        zf86OTj/1tLN/97a1f/e2tX/3trV/9vX0v+yrqn/dHBs/2poZf+fmZD/v7qy/1JQTqIAAAAxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYICAd4rKee8r65sf+IhX7/d3Rx/8jEwP/a1tH/2tbR/93Z
        1P/e2tX/29fS/3Nwbf/b19L/3trV/93Z1P/a1tH/2tbR/8jEwP93dHH/hYF6/7q0q/+rpp3vAAAAbgAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCwoBSQhHr18eHD/z8vF/7y2rf9/fHb/eHVy/8PA
        u/+qpqH/trKs/9vX0v/c2NL/r6yo/9zY0v/b19L/trKs/6qmof/DwLv/eHVy/357df+5s6r/zsnD/3Zz
        broAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIiBuXFhQ/1JOR/+VkIn/19PO/8G8
        tP+DgHr/cW9s/2RgW//Fwbv/zsrF/9HNx/9XU07/0c3H/87Kxf/Fwbv/ZGBb/3Fua/+DgHr/wLuz/9bS
        zf+no5zaAAAAZwAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wMDA6w/Pjvwa2pn/zAt
        KOy2sqzi29jU/8nFvv+Tj4n/ZGFe/3p2c/+Uko3/qaWf/z87Nv+ppZ//lJKN/3p2c/9kYV7/lZGK/8rG
        v//b2NT/t7Ot4AAAAGwAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/wAA
        AP8lJSTJGRgWqwAAAG27uLPc5+Xi/9XRzP+9uLH/mpWQ/3x5df9yb2z/Y2Fd/3JvbP99eXb/nJeS/7+7
        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
</value>
  </data>
</root>